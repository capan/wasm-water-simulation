[target.'cfg(all(target_arch = "wasm32", target_os = "macos"))'.dependencies]
ring = { version = "0.17.8", features = ["wasm32_unknown_unknown_js"]}

[package]
name = "wasm-water-simulation"
version = "0.1.0"
authors = ["capan <capanh@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"
js-sys = "0.3.60"
wasm-bindgen-futures = "0.4.33"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }
rand = "0.8.5"
getrandom = { version = "0.2", features = ["js"] }
tiff = "0.8.0"
image = "0.24.5"
geotiff = "0.0.2"
#minreq = { version = "2.6.0", features = ["https"] }
#webpki = "0.22.0"
#ring = "0.17.8"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[dependencies.web-sys]
version = "0.3.4"
features = [
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'Window',
  'console',
]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
lto = true

